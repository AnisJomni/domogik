=============
REST /user
=============

GET /user/
------------------
List all user accounts

Result: ::

    [
        {
            "skin_used": "",
            "core_person": {
                "first_name": "Admin",
                "last_name": "Admin",
                "id": 1,
                "birthdate": "1900-01-01",
                "user_accounts": [
                    null
                ]
            },
            "person": null,
            "is_admin": true,
            "person_id": 1,
            "login": "admin",
            "id": 1
        }
    ]

????? /account/user/list/by-id/<id>
-----------------------------
Result : same as /list with only the user associated to the id

POST /user/
------------------
Add user account + person (if needed)

HTTP content (for only adding account):
    * login
    * password
    * is_admin
    * skin_used
    * person_id

HTTP content (for account and person):
    * login
    * password
    * is_admin
    * skin_used
    * first_name
    * last_name
    * birthday (optional)

Result : same as GET /user/ with only the user added

PUT /user/
-------------------------
Update account + person 

HTTP content (passed parameters are updated):
    * login
    * password
    * is_admin
    * skin_used
    * first_name
    * last_name
    * birthday

Result : same as GET /user/ with only the user updated

DELETE /user/
---------------------
Del account (user account only) 

HTTP content:
    * id

Result : same as GET /user/ with only the user deleted
