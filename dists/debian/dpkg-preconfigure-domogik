#!/bin/bash

set -e
if [ ${UID} != 0 ];then
    echo "Must be run with root privileges";
    exit 1;
fi
. /usr/share/debconf/confmodule

db_capb backup
db_version 2.0

STATE=1
while true; do
    case "$STATE" in
    1)
        #The interface parameters is available in every configs
        db_get "domogik/interface"
        INTERFACE="$RET"
        db_reset "domogik/interface"
        db_set "domogik/interface" "$INTERFACE"
        db_input critical "domogik/interface" || true

    ;;
    2)
        #This is only for a secondary configuration
        set +e
        db_get "domogik/rest_ip"
        RES=$?
        set -e
        if [ ${RES} = 0 ];then
            db_get "domogik/rest_ip"
            RESTIP="$RET"
            db_reset "domogik/rest_ip"
            db_set "domogik/rest_ip" "$RESTIP"
            db_input critical "domogik/rest_ip" || true

            db_get "domogik/rest_port"
            RESTPORT="$RET"
            db_reset "domogik/rest_port"
            db_set "domogik/rest_port" "$RESTPORT"
            db_input critical "domogik/rest_port" || true
        fi

    ;;
    3)
        #This is only for a primary configuration
        set +e
        db_get "domogik/db_host"
        RES=$?
        set -e
        if [ ${RES} = 0 ];then
            db_get "domogik/db_host"
            DBHOST="$RET"
            db_reset "domogik/db_host"
            db_set "domogik/db_host" "$DBHOST"
            db_input critical "domogik/db_host" || true

            db_get "domogik/db_root"
            DBROOT="$RET"
            db_reset "domogik/db_root"
            db_set "domogik/db_root" "$DBROOT"
            db_input critical "domogik/db_root" || true

            db_get "domogik/db_root_pwd"
            DBROOTPWD="$RET"
            db_reset "domogik/db_root_pwd"
            db_set "domogik/db_root_pwd" "$DBROOTPWD"
            db_input critical "domogik/db_root_pwd" || true
        fi
    ;;
    4)
        #This is only for a primary configuration
        set +e
        db_get "domogik/db_name"
        RES=$?
        set -e
        if [ ${RES} = 0 ];then
            db_get "domogik/db_name"
            DBNAME="$RET"
            db_reset "domogik/db_name"
            db_set "domogik/db_name" "$DBNAME"
            db_input critical "domogik/db_name" || true

            db_get "domogik/db_user"
            DBUSER="$RET"
            db_reset "domogik/db_user"
            db_set "domogik/db_user" "$DBUSER"
            db_input critical "domogik/db_user" || true

            db_get "domogik/db_password"
            DBPASSWORD="$RET"
            db_reset "domogik/db_password"
            db_set "domogik/db_password" "$DBPASSWORD"
            db_input critical "domogik/db_password" || true
        fi
    ;;
    *)
         # Le cas par defaut est atteint quand $STATE est plus
         # grand que le dernier etat implemente, et provoque la
         # sortie de la boucle. Ceci requiert que les etat soient
         # numerotes a partir de 1, successivement, et sans trou,
         # puisque l'on entrera dans le cas par defaut s'il y a un
         # trou dans la numerotation
         break # quitte la boucle "while"
    ;;
    esac

    if db_go; then
         STATE=$(($STATE + 1))
    else
         STATE=$(($STATE - 1))
    fi
done

if [ $STATE -eq 0 ]; then
    # L'utilisateur a demande a revenir a la premiere
    # question. Ce cas est problematique. L'installation
    # normale des paquets avec dpkg et apt n'est pas
    # capable de revenir en arriere vers les questions
    # d'autres paquets, a l'heure ou ceci est ecrit, donc
    # cela va provoquer la sortie, laissant les paquets non
    # configures - ce qui est probablement la meilleure
    # facon de gerer la situation.
    exit 10
fi

db_stop

