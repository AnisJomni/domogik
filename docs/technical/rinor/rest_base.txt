==========
REST /base
==========
 
Devices and features management
===============================

Device usage
------------

Reading operations
^^^^^^^^^^^^^^^^^^

* /base/device_usage/list/

Result: ::

    {
        "status" : "OK",
        "code" : 0,
        "description" : "None",
        "device_usage" : [
            {
                "description" : "Lamp, light usage",
                "default_options" : "{ "binary": {"state0":"Off", "state1":"On"}, "range": {"step":10, "unit":"%"} }",
                "id" : "light",
                "name" : "Light"
            },
            ...
        ]
    }

* /base/device_usage/list/by-name/<name>

Return: like /list but with only the item filtered

Writing operations
^^^^^^^^^^^^^^^^^^

* /base/device_usage/add/id/<id>/name/<name>/description/<description>/default_options/<default_options>

Return: like /list but with only the item added

* /base/device_usage/update/id/<id>/name/<name>/description/<description>/default_options/<default_options>

Return: like /list but with only the item updated

* /base/device_usage/del/<id>

Return: like /list but with only the item deleted

Device type
-----------

Reading operations
^^^^^^^^^^^^^^^^^^

* /base/device_type/list/

Result: ::

    {
        "status" : "OK",
        "code" : 0,
        "description" : "None",
        "device_type" : [
            {
                "description" : "None",
                "device_technology_id" : "x10",
                "id" : "x10.switch.switch",
                "device_technology" : {
                    "description" : "",
                    "id" : "x10",
                    "name" : "X10"
                },
                "name" : "Switch"
            },
        ]
    }

Writing operations
^^^^^^^^^^^^^^^^^^

* /base/device_type/add/id/<id>/name/<name>/description/<description>/technology_id/<technology_id>

Return: like /list but with only the item added

* /base/device_type/update/id/<id>/name/<name>/description/<description>/technology_id/<technology_id>

Return: like /list but with only the item updated

* /base/device_type/del/<id>

Return: like /list but with only the item deleted

Device technology
-----------------

Parameters description
^^^^^^^^^^^^^^^^^^^^^^
Here the id is not numeric. The format is **[a-z0-9]**. This id is used for doing an explicit reference to technology : in xml stats and commands files.

Reading operations
^^^^^^^^^^^^^^^^^^

* /base/device_technology/list

Result: ::

    {
        "status" : "OK",
        "code" : 0,
        "description" : "None",
        "device_technology" : [
            {
                "description" : "Telephony, videophone, mails, messaging",
                "id" : "communication",
                "name" : "Communication"
            },
            ...
        ]
    }

* /base/device_technology/list/by-id/<name>

Return: like /list but with only the item filtered

Writing operations
^^^^^^^^^^^^^^^^^^

* /base/device_technology/add/id/<id>name/<name>/description/<description>

Return: like /list but with only the item added

* /base/device_technology/update/id/<id>/name/<name>/description/<description>

Return: like /list but with only the item updated

* /base/device_technology/del/id/<id>

Return: like /list but with only the item deleted

Device
------

Reading operations
^^^^^^^^^^^^^^^^^^

* /base/device/list

Will only return devices where the address field is NULL

Result: ::

    {
        "status" : "OK",
        "code" : 0,
        "description" : "None",
        "device" : [
            {
                "description" : "Lampe murale",
                "reference" : "AM12",
                "device_usage_id" : 1,
                "device_type" : {
                    "description" : "None",
                    "id" : 1,
                    "name" : "Switch",
                    "device_technology_id" : "x10"
                },
                "address" : "A1",
                "device_type_id" : 1,
                "device_usage" : {
                    "description" : "Lamp, light usage",
                    "default_options" : "{ &quot;binary&quot;: {&quot;state0&quot;:&quot;Off&quot;, &quot;state1&quot;:&quot;On&quot;}, &quot;range&quot;: {&quot;step&quot;:10, &quot;unit&quot;:&quot;%&quot;} }",
                    "id" : 1,
                    "name" : "Light"
                },
                "id" : 1,
                "name" : "Lampe"
            },
            ...
        ]
    }

* /base/device/list-old

Return: same as /list but only the devices that have an address configured

* /base/device/params/<device_type_id>

Return: The parameters needed for adding a new device, will return the needed global parameters and the command/stat specifick parameters

Result: ::

    {
       "status": "OK",
       "code": 0,
       "description": "None",
       "deviceparams":
       [
           {
               "xpl_stat":
               [
                   {
                       "params":
                       [
                       ],
                       "name": "get_level",
                       "schema": "lighting.device"
                   },
                   {
                       "params":
                       [
                       ],
                       "name": "get_level",
                       "schema": "lighting.device"
                   }
               ],
               "xpl_cmd":
               [
                   {
                       "params":
                       [
                           {
                               "type": "string",
                               "description": "a dummy param",
                               "key": "dummy"
                           }
                       ],
                       "xplstat_name": "get_level",
                       "name": "set_level_bin",
                       "schema": "lighting.basic"
                   },
                   {
                       "params":
                       [
                           {
                               "type": "string",
                               "description": "a dummy param",
                               "key": "dummy"
                           }
                       ],
                       "xplstat_name": "get_level",
                       "name": "set_level_bin",
                       "schema": "lighting.basic"
                   }
               ],
               "global":
               [
                   {
                       "max_value": 4,
                       "min_value": 1,
                       "type": "integer",
                       "description": "The channel number",
                       "key": "channel"
                   },
                   {
                       "max_value": 255,
                       "min_value": 0,
                       "type": "integer",
                       "description": "The decimal address",
                       "key": "address"
                   }
               ]
           }
       ]
    }

Writing operations
^^^^^^^^^^^^^^^^^^

* /base/device/add/name/<name>/type_id/<type_id>/usage_id/<usage_id>/description/<description>/reference/<reference>

Return: like /list but with only the item added

* /base/device/addglobal/id/<device_id>
* /base/device/xplcmdparams/id/<device_id>/<param 1>/<value 1>/.../<param N>/<value N>
* /base/device/xplstatparams/id/<device_id>/<param 1>/<value 1>/.../<param N>/<value N>

* /base/device/update/id/<id>/name/<name>/usage_id/<usage_id>/description/<description>/reference/<reference>

Return: like /list but with only the item updated

.. note::
    type_id is not updatable

* /base/device/del/<id>

Return: like /list but with only the item deleted
