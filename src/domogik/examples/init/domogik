#!/bin/bash

### BEGIN INIT INFO
# Provides:          domogik
# Required-Start:    $local_fs $network
# Required-Stop:     $local_fs $network
# Default-Start:     2 3 4 5
# Default-Stop:      1
# Short-Description: Start Domogik daemons
### END INIT INFO

#This file is part of B{Domogik} project (U{http://www.domogik.org}).
#
#License
#=======
#
#B{Domogik} is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#
#B{Domogik} is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
#GNU General Public License for more details.
#
#You should have received a copy of the GNU General Public License
#along with Domogik. If not, see U{http://www.gnu.org/licenses}.

# source application-specific settings
CUSTOM_PATH=""
HUB_IFACE="lo"

[ -f /etc/conf.d/domogik ] && . /etc/conf.d/domogik
[ -f /etc/default/domogik ] && . /etc/default/domogik

PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$CUSTOM_PATH:
if [ $UID != 0 ];then
    echo "Must be run with root privileges";
    exit 1;
fi

function start_django {
    echo -n " * Starting Django..."
    USER_HOME=$(grep $DOMOGIK_USER /etc/passwd | cut -d":" -f6)
    DJANGO_SERVER_IP=$(grep "^django_server_ip" ${USER_HOME}/.domogik.cfg | cut -d " " -f 3)
    if [ -z ${DJANGO_SERVER_IP} ] ; then
        DJANGO_SERVER_IP=127.0.0.1
    fi
    DJANGO_SERVER_PORT=$(grep "^django_server_port" ${USER_HOME}/.domogik.cfg | cut -d " " -f 3)
    if [ -z ${DJANGO_SERVER_PORT} ] ; then
        DJANGO_SERVER_PORT=8000
    fi
    /bin/su - ${DOMOGIK_USER} -c "dmg_django runserver ${DJANGO_SERVER_IP}:${DJANGO_SERVER_PORT}>/tmp/django.log 2>&1 &"
    if [ $? -gt 0 ]; then
        echo " An error occured during Django startup."
        exit 1
    else
        echo " Done."
    fi
}

function start_xpl {
    if [ -z "$(which xPL_Hub)" ];then
        echo "ERROR : xPL_Hub not in path, please install it somewhere in the path, or add CUSTOM_PATH to domogik system config file."
        exit 1
    fi
    echo -n "* Starting XPL..."
    /bin/su - ${DOMOGIK_USER} -c "$(which xPL_Hub) -interface ${HUB_IFACE} >/dev/null "
    if [ $? -gt 0 ]; then
        echo " An error occured during Xpl startup."
        exit 1
    else
        echo " Done."
    fi
}

function start_manager {
    echo -n "* Starting Manager (with $MANAGER_PARAMS)..."
    /bin/su - ${DOMOGIK_USER} -c "dmg_manager $MANAGER_PARAMS"
    if [ $? -gt 0 ]; then
        echo " An error occured during manager startup."
        exit 1
    else
        echo " Done."
    fi
}

function stop_django {
    echo -n " * Stopping Django..."
    for pid in `ps ax | grep "dmg_django runserver" | grep -v grep | awk '{print $1}'`; do
        kill -15 $pid 2>/dev/null 1>&2
    done
    echo " Done."
}

function stop_xpl {
    echo -n " * Stopping XPL..."
    for pid in `ps ax | grep "xPL_Hub" | grep -v grep | awk '{print $1}'`; do
        kill -15 $pid 2>/dev/null 1>&2
        kill -9 $pid 2>/dev/null 1>&2
    done
    echo " Done."
}

function stop_manager {
    echo -n " * Stopping Manager..."
    for pid in `ps ax | grep "dmg_manager" | grep -v grep | awk '{print $1}'`; do
        kill -15 $pid 2>/dev/null 1>&2
    done
    echo " Done."
}

function stop_plugins {
    echo -n " * Stopping Plugins..."
    /bin/su - ${DOMOGIK_USER} -c "dmg_send  xpl-cmnd domogik.system 'command=stop,plugin=*,host=$HOSTNAME'"
    sleep 2
    for pid in `ps ax | egrep "domogik.*\.pyc$" | grep -v grep | awk '{print $1}'`; do
        kill -15 $pid 2>/dev/null 1>&2
    done
    sleep 2
    for pid in `ps ax | egrep "domogik.*\.pyc$" | grep -v grep | awk '{print $1}'`; do
        kill -9 $pid 2>/dev/null 1>&2
    done
    echo " Done."
}

# Check if the directory for lock exists
function check_lock_dir {
    USER_HOME=$(grep $DOMOGIK_USER /etc/passwd | cut -d":" -f6)
    DIRECTORY=$(grep "^pid_dir_path" ${USER_HOME}/.domogik.cfg | cut -d " " -f 3)
    if [ ! -d $DIRECTORY ];then
        mkdir $DIRECTORY
    fi
    chown ${DOMOGIK_USER}: $DIRECTORY
}

case "$1" in
    start)
    check_lock_dir
    if [ $# -eq 1 ];then
        start_xpl
        start_manager
        start_django
    else
        case "$2" in
            django)
            start_django
            ;;
            xpl)
            start_xpl
            ;;
            manager)
            start_manager
            ;;
        esac
    fi

    ;;
    stop)
    if [ $# -eq 1 ];then
        stop_django
        stop_plugins
        stop_xpl
        stop_manager
    else
        case "$2" in
            django)
            stop_django
            ;;
            xpl)
            stop_xpl
            ;;
            manager)
            stop_manager
            ;;
            plugins)
            stop_plugins
            ;;
        esac
    fi

    ;;
    restart)
    $0 stop $2
    sleep 5
    $0 start $2
    ;;
    *)
    echo "usage: $0 {start|stop|restart} [(django|xpl|manager|plugins)]"
esac
exit 0
